function Pyro(a){if("undefined"!=typeof Firebase&&"undefined"!=typeof a){if(a.hasOwnProperty("url"))this.url=a.url,this.dbUrl=this.url,this.mainRef=new Firebase(a.url),this.pyroRef=pyroRef,a.hasOwnProperty("name")&&(this.name=a.name),a.hasOwnProperty("dbName")&&(this.dbName=a.dbName),this.appUrl=a.hasOwnProperty("appUrl")?a.appUrl:this.name+".s3-website-us-east-1.amazonaws.com";else if(console.error("Please provide your Firebase Url when running new Pyro() firebase URL"),errorCb)throw Error("Please provide your Firebase Url when running new Pyro() firebase URL");return this}throw"undefined"==typeof a?(console.error("New pyro object does not include nessesary information."),Error("Please provide an object containing a url parameter containing your Firebase URL")):Error("Firebase library does not exist. Check that firebase.js is included in your index.html file.")}function firebaseRef(){var a=Array.prototype.slice.call(arguments);return a.length&&(ref=ref.child(pathRef(a))),ref}function pathRef(a){for(var b=0;b<a.length;b++)if(angular.isArray(a[b]))a[b]=pathRef(a[b]);else if("string"!=typeof a[b])throw new Error("Argument "+b+" to firebaseRef is not a string: "+a[b]);return a.join("/")}function loadUsersList(a,b){a.child("users").on("value",function(a){b(a)})}function createNewInstance(a,b,c){checkForInstance(a,function(d){if(null==d)instanceList.child(a.name).set(instanceData,function(){a.pyroRef=instanceList.child(a.name),b&&b(a.pyroRef)});else{var e={message:"App already exists"};console.warn(e.message),c(e)}})}function checkForInstance(a,b,c){console.log("checkForInstance:",a);var d=a.pyroRef.child("instances");d.orderByChild("name").equalTo(b).once("value",function(a){console.log("usersSnap:",a),null==a.val()?(console.log("App does not already exist"),c(null)):(console.log("app already exists"),c&&c(a.child(b)))})}function User(a,b){console.log("NEW User");var c;if(!a)throw Error("No userData provided.");return c=a,a.hasOwnProperty("email")&&(c.account=checkForUser(a.email,b,function(a){return a})),c}function emailSignup(a,b,c,d){a.hasOwnProperty("email")&&a.hasOwnProperty("password")?(console.log("[emailSignup] contains correct parameters"),b.mainRef.child("users").orderByChild("email").equalTo(a.email).on("value",function(e){console.log("[emailSignup] userQuery:",e),console.log("[emailSignup] userQuery.hasChildren()",e.hasChildren()),e.hasChildren()?(console.warn("Account already exists. Session must have been added already:",JSON.stringify(e.val())),c(e.val())):(console.log("[emailSignup] New user does not already exist"),b.mainRef.createUser(a,function(e){null===e?(console.log("[emailSignup] User created successfully"),authWithPassword(a,b.mainRef,function(a){createUserProfile(a,b.mainRef,function(){var b=new User(a);c(b)})})):(console.error("[emailSignup] Error creating user:",e.message),d(e))}))},function(a){console.error("[emailSignup] Error checking for existing account:",a),d(a)})):d({message:"The specified email/password combination is incorrect"})}function authWithPassword(a,b,c,d){if(a.hasOwnProperty("email")&&a.hasOwnProperty("password"))b.authWithPassword(a,function(a,e){null===a?(console.log("User ID: "+e.uid+", Provider: "+e.provider),setupPresence(e.uid,b),c(e)):(console.error("Error authenticating user:",a),d(a))});else{console.error("The specified email/password combination is incorrect");var e={message:"The specified email/password combination is incorrect"};d(e)}}function createUserProfile(a,b,c){console.log("createUserAccount called:",arguments);var d=b.child("users").child(a.uid),e={role:10,provider:a.provider};"password"==a.provider&&(e.email=a.password.email),d.once("value",function(a){null==a.val()||a.hasChild("sessions")?(e.createdAt=Firebase.ServerValue.TIMESTAMP,d.setWithPriority(e,e.email,function(){console.log("New user account created:",a.val()),c(a.val())})):(console.error("User account already exists",a.val()),c(a.val()))})}function setupPresence(a,b){console.log("setupPresence:",arguments);{var c=b.child(".info/connected"),d=b.child("presense").child(a),e=b.child("sessions"),f=(b.child("users").child(a),b.child("users").child(a).child("sessions"));f.child("past")}c.on("value",function(c){if(c.val()){var g=(b.onDisconnect(),e.push({began:Firebase.ServerValue.TIMESTAMP,user:a})),h=g.child("ended");h.onDisconnect().set(Firebase.ServerValue.TIMESTAMP);var i=f.child("current").push(g.key());i.onDisconnect().remove(),d.set(!0),d.onDisconnect().remove(),onUnAuth(d,function(){h.set(Firebase.ServerValue.TIMESTAMP),i.remove(),d.remove()})}})}function onUnAuth(a,b){a.onAuth(function(a){a||b()})}function userById(a,b,c){console.log("userById run with id:",a),b.child(a).on("value",function(a){c(a.val())})}function checkForUser(a,b,c){console.log("CheckForUser:",a);var d="t@t.com";a.hasOwnProperty("email")||a.hasOwnProperty("password")?(a.hasOwnProperty("password")?d=a.password.email:a.hasOwnProperty("email")&&(d=a.email),b.orderByChild("email").equalTo(d).on("value",function(a){console.log("check for user returned:",a.val()),c(a.val())})):console.error("Incorrect user info")}var pyroRef=new Firebase("http://pyro.firebaseio.com");Pyro.prototype={authAnonymously:function(a){var b=this.mainRef.getAuth();console.log("authAnonymously",b);var c=this;null!=b?this.mainRef.authAnonymously(function(b,d){if(b)console.log("Login Failed!",b);else{console.log("Authenticated successfully with payload:",d);var e={uid:d.uid,provider:d.provider};c.mainRef.child("users").child(d.uid).set(e),a&&a(e)}}):a&&a(b)},userSignup:function(a,b,c){var d=this;emailSignup(a,d,b,c)},login:function(a,b,c){var d=this;authWithPassword(a,d.mainRef,b,c)},logout:function(a){this.mainRef.unauth(),a&&a()},getAuth:function(){var a=this.mainRef.getAuth();return a?a:(console.warn("Not Authenticated"),null)},getListByAuthor:function(a,b){var c=this.getAuth();null!=c?this.mainRef.child(a).orderByChild("author").equalTo(c.uid).on("value",function(a){b(a.val())}):console.warn("listByAuthor cannot load list without current user")},createObject:function(a,b,c){var d=this.getAuth();d&&(b.author=d.uid),b.createdAt=Date.now();var e=this.mainRef.child(a).push(b,function(){c(e)})},getUser:function(a){if(null!=this.getAuth()){var b=this;userById(this.getAuth().uid,b.mainRef.child("users"),function(b){a(b)})}else a(null)},loadObject:function(a,b,c,d){var e=this.mainRef.child(a);e.child(b).on("value",function(a){c(a.val())},function(a){d&&d(a)})},deleteObject:function(a,b,c,d){var e=this.mainRef.child(a);e.child(b).remove(function(){error?(console.log("Delete of object with Id: "+b+" out of the list: "+a+" was not successful. Error: ",error),d&&d(error)):(console.log(b+" was successfully removed from the "+a+" list"),c&&c())})},getObjectCount:function(a,b,c){this.mainRef.child(a).on("value",function(a){b(a.numChildren())},function(a){c&&c(a)})},getUserCount:function(a,b){this.mainRef.child("users").on("value",function(b){a(b.numChildren())},function(a){b&&b(a)})},getUserList:function(a,b){this.mainRef.child("users").on("value",function(b){a(b.val())},function(a){b&&b(a)})},createInstance:function(a,b,c){var d=this;a.hasOwnProperty("name")?(this.mainRef=new Firebase(d.url),checkForInstance(this,a.name,function(a){b(a)})):(console.log("Missing app info."),c(a.hasOwnProperty("name")?{message:"Please enter the name of your firebase instance."}:{message:"Please enter your firebase secret"}))},instanceRef:function(a,b,c){console.log("loadInstance:",a),this.currentInstance={name:a.name},checkForInstance(this,a.name,b,c)},deleteInstance:function(a){this.pyroRef.child("instances").child(a).remove(),console.log("instance with the name:"+a+"was deleted successsfully")},fbRef:function(){var a=this.mainRef,b=Array.prototype.slice.call(arguments);return b.length&&(a=a.child(pathRef(b))),a}};